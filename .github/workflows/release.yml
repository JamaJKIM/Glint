name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
        
    steps:
      - name: Check out Git repository
        uses: actions/checkout@v3
        
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'
          
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev @electron-forge/cli
          npm install --save-dev @electron-forge/maker-squirrel
          npm install --save-dev @electron-forge/maker-dmg
          npm install --save-dev @electron-forge/maker-zip
          
      - name: Build TypeScript
        run: npm run build
        
      - name: Make Electron app
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            npx electron-forge make --platform win32 --arch x64
          else
            npx electron-forge make --platform darwin --arch x64
          fi
        shell: bash
          
      - name: Prepare release files
        shell: bash
        run: |
          mkdir -p release-files
          if [ "${{ matrix.os }}" = "windows-latest" ]; then
            cp "out/make/squirrel.windows/x64/Glint Setup.exe" release-files/Glint-Setup-Windows.exe || true
          else
            cp out/make/*.dmg release-files/Glint-macOS.dmg || true
          fi
            
      - name: Upload Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: release-files/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 